[{"/Users/GGUL/Documents/Genius-Hour/pages/_app.js":"1","/Users/GGUL/Documents/Genius-Hour/pages/assignments.js":"2","/Users/GGUL/Documents/Genius-Hour/pages/contacts.js":"3","/Users/GGUL/Documents/Genius-Hour/pages/index.js":"4","/Users/GGUL/Documents/Genius-Hour/pages/login.js":"5","/Users/GGUL/Documents/Genius-Hour/pages/signup.js":"6","/Users/GGUL/Documents/Genius-Hour/components/NavBar.js":"7"},{"size":608,"mtime":1647095610698,"results":"8","hashOfConfig":"9"},{"size":5974,"mtime":1647095578314,"results":"10","hashOfConfig":"9"},{"size":11045,"mtime":1647095678180,"results":"11","hashOfConfig":"9"},{"size":840,"mtime":1647094294007,"results":"12","hashOfConfig":"9"},{"size":1732,"mtime":1647095616389,"results":"13","hashOfConfig":"9"},{"size":1627,"mtime":1647095622385,"results":"14","hashOfConfig":"9"},{"size":1061,"mtime":1643981338492,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12aujva",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/GGUL/Documents/Genius-Hour/pages/_app.js",[],"/Users/GGUL/Documents/Genius-Hour/pages/assignments.js",["31","32"],"import { useEffect, useState } from \"react\"\nimport i from \"./assignments.module.css\"\nimport {authService, dbService } from \"../fb\"\nimport LZString from \"lz-string\"\n\nexport default function Assignments() {\n    const [file, setFile] = useState(\"\")\n    const onFileChange = (event) => {\n        setFile(null)\n        const afile = event.target.files[0]\n        const reader = new FileReader();\n        reader.onloadend = (d) => {\n            const result = d.target.result;\n            setFile(result)\n        }\n        reader.readAsDataURL(afile)\n        console.log(afile.name)\n    }\n    const onRemove = () => {\n        setFile(null)\n    }\n    useEffect(() => {\n        const div = document.createElement(\"div\");\n        div.classList.add(i.assignments)\n        div.id = \"assignment\"\n        dbService.collection(\"Assignments\").onSnapshot((querySnapshot) => {\n            let asdfasdf = [];\n            querySnapshot.forEach((doc) => {\n                asdfasdf.push({\n                    id: doc.id,\n                    title: doc.data().title,\n                    subject: doc.data().subject,\n                    desc: doc.data().description,\n                    file: doc.data().file,\n                    date: doc.data().date,\n                    author: doc.data().author\n                })\n            })\n            const bigDiv = document.getElementById(\"bidDiv\")\n            for (let a = 0; a<asdfasdf.length; a++) {\n                const littleDiv = document.createElement(\"div\");\n                littleDiv.id = asdfasdf[a].id\n                littleDiv.classList.add(\"asdf\");\n                littleDiv.classList.add(i.formDiv);\n                littleDiv.classList.add(i.assignment)\n                const h1 = document.createElement(\"h1\")\n                h1.innerText = \"Title: \" + asdfasdf[a].title;\n                if (asdfasdf[a].title == \"\") {\n                    h1.innerText = \"Untitled\";\n                }\n                littleDiv.appendChild(h1);\n                const h2 = document.createElement(\"p\");\n                h2.innerText = \"Subject: \" + asdfasdf[a].subject;\n                if (asdfasdf[a].subject == \"\") {\n                    h2.innerText = \"Subject Not Selected\";\n                }\n                littleDiv.appendChild(h2);\n                const p = document.createElement(\"p\");\n                p.innerText = \"Description: \" + asdfasdf[a].desc;\n                if (asdfasdf[a].desc == \"\") {\n                    p.innerText = \"No Description Written\";\n                }\n                littleDiv.appendChild(p);\n                if (asdfasdf[a].file !== \"\") {\n                    const image = document.createElement(\"img\");\n                    image.src = LZString.decompressFromUTF16(asdfasdf[a].file);\n                    image.classList.add(i.images)\n                    littleDiv.appendChild(image)\n                }\n                const p2 = document.createElement(\"p\");\n                p2.innerText = \"Due Date: \" + asdfasdf[a].date;\n                if (asdfasdf[a].date == \"\") {\n                    p2.innerText = \"No Due Date Selected\";\n                }\n                littleDiv.appendChild(p2);\n                const p3 = document.createElement(\"p\");\n                p3.innerText = \"Uploaded By: \" + asdfasdf[a].author;\n                if (asdfasdf[a].author == \"\") {\n                    p3.innerText = \"Uploaded By: Anonymous\";\n                }\n                littleDiv.appendChild(p3);\n                const deleteBtn = document.createElement(\"button\");\n                deleteBtn.innerText = \"Delete\"\n                deleteBtn.classList.add(i.deleteBtn)\n                deleteBtn.onclick = (event) => {\n                    const box = event.path[1].id;\n                    dbService.doc(\"Assignments/\" + box).delete();\n                    event.path[2].innerText = \"\"\n                }\n                littleDiv.appendChild(deleteBtn)\n                div.appendChild(littleDiv);\n            }\n            bigDiv.appendChild(div)\n        })\n        document.getElementById(\"submit\").addEventListener(\"click\", () => {\n            let formChildren = document.getElementById(\"form\").children\n        let title = formChildren[0].value\n        let subject = formChildren[1].value\n        let desc = formChildren[2].value\n        let date = document.getElementById(\"date\").value\n        const ssss = document.getElementById(\"a\");\n        let asdfg = \"\"\n        if (ssss) {\n            asdfg = LZString.compressToUTF16(ssss.src)\n        }\n        console.log(asdfg)\n        dbService.collection(`Assignments`).add({\n            title: title,\n            subject: subject,\n            description: desc,\n            file: asdfg,\n            date: date,\n            author: authService.currentUser.displayName,\n        })\n        const asdf = document.getElementById(\"assignment\")\n        asdf.innerHTML = \"\";\n        setFile(null)\n        })\n    }, [])\n    return (\n        <div className={i.bigDiv} id=\"bidDiv\">\n            <div className={i.formDiv}>\n                <h1>Add an Assignment</h1>\n                <form id=\"form\">\n                    <input className={i.title} type=\"text\" placeholder=\"Assignment Title\" required />\n                    <input className={i.subject} type=\"text\" placeholder=\"Subject\" required />\n                    <input className={i.desc} type=\"text\" placeholder=\"Assignment Description\" />\n                    <p>Photos: </p>\n                    <input type=\"file\" className={i.photo} accept=\"image/*\" onChange={onFileChange} />\n                    <p>Preview:</p>\n                    {file&& <div className={i.previewDiv} ><img className={i.preview} id=\"a\" src={file} /><button className={i.remove} onClick={onRemove}>Remove Photo</button></div>}\n                    <p>Due Date: </p>\n                    <input type=\"date\" id=\"date\" className={i.date} />\n                </form>\n                <button id=\"submit\" className={i.submit}>Add Assignment</button>\n            </div>\n        </div>\n    )\n}","/Users/GGUL/Documents/Genius-Hour/pages/contacts.js",["33"],"/Users/GGUL/Documents/Genius-Hour/pages/index.js",[],"/Users/GGUL/Documents/Genius-Hour/pages/login.js",[],"/Users/GGUL/Documents/Genius-Hour/pages/signup.js",[],"/Users/GGUL/Documents/Genius-Hour/components/NavBar.js",[],{"ruleId":"34","severity":1,"message":"35","line":131,"column":60,"nodeType":"36","endLine":131,"endColumn":107},{"ruleId":"37","severity":1,"message":"38","line":131,"column":60,"nodeType":"36","endLine":131,"endColumn":107},{"ruleId":"39","severity":1,"message":"40","line":171,"column":8,"nodeType":"41","endLine":171,"endColumn":10,"suggestions":"42"},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [router]",{"range":"46","text":"47"},[10391,10393],"[router]"]